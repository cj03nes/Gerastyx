contract Zeropoint {

accountSettings{

createProfile ={ 
msg.sender( username + password + emailAddress || phoneNumber ),
then return send verificationCode to msg.sender( emailAddress || phoneNumber);
vericationCode = random uint256(number);
require(msg.sender return verificationCode);
if msg.sender(verificationCode) != verificationCode then return errror,
else if msg.sender(vericationCode) == vericationCode then createProfile returns profileCreated;   }

loginToProfile ={

if msg.sender( username || emailAdress || phoneNumber ) == profileCreated, then require msg.sender(username + password);
if username || password != profileCreated then return error,
else if username && password == profileCreated then loginToProfile returns profileLoggedInto;   }

connectCard ={
require(msg.sender == profileLoggedInto);
require(msg.sender[cardInformation ]);
cardInformation = ( cardNumber + expirationDate + CVC + nameOnFile);
cardNumber = 16 digit uint256(number);
expirationDate = 2 digit uint256(number[month]) + 2 digit uint256(number[year]);
CVC = 3 digit uint256(number);
nameOnFile = ( firstName + lastName);
if msg.sender[cardInformation ] != ( cardNumber + expirationDate + CVC + nameOnFile) then return error,
else if msg.sender[cardInformation ] == ( cardNumber + expirationDate + CVC + nameOnFile) then connectCard returns cardConnected;  }


connectBank ={
require(msg.sender == profileLoggedInto);
require(msg.sender[bankInformation]);
bankInformation = (bankName + accountNumber + routingNumber + username + password);
bankName = ("string");
accountNumber = 12 digit uint256(number);
routingNumber = 9 digit uint256(number);
username = ("string");
password = ("string");
if msg.sender[bankInformation] != (bankName + accountNumber + routingNumber + username + password) then return error,
else if msg.sender[bankInformation] == (bankName + accountNumber + routingNumber + username + password) then connectBank returns bankConnected;  }

transferFromBank ={ 
require(msg.sender == profileLoggedInto);
require(msg.sender == bankConnected);
msg.sender(transferFromBank) = bankConnected - uint256(amount),
if bankConnected[balance] <= uint256(amount) return error,
else if bankConnected[balance] >= uint256(amount) then transferFromBank returns transferredFromBank;
msg.sender[balance] + msg.sender(uint256(amount)[transferredFromBank]) = msg.sender[balance];   }

transferToBank ={
require(msg.sender == profileLoggedInto);
require(msg.sender == bankConnected);
msg.sender(transferFromBank) = bankConnected + uint256(amount),
if msg.sender[balance] <= uint256(amount) return error,
else if msg.sender[balance] >= uint256(amount) then transferToBank returns transferredToBank;
msg.sender[balance] - msg.sender(uint256(amount)[transferredToBank]) = msg.sender[balance];  }






connectSpendCard ={
require(msg.sender == profileLoggedInto);
require(msg.sender[spendCardInformation]);
spendCardInformation = ( spendCardNumber + expirationDate + CVC + nameOnFile);
spendCardNumber = 16 digit uint256(number);
expirationDate = 2 digit uint256(number[month]) + 2 digit uint256(number[year]);
CVC = 3 digit uint256(number);
nameOnFile = ( firstName + lastName);
if msg.sender[spendCardInformation ] != ( spendCardNumber + expirationDate + CVC + nameOnFile) then return error,
else if msg.sender[spendCardInformation ] == ( spendCardNumber + expirationDate + CVC + nameOnFile) then connectSpendCard returns spendCardConnected;  }


}

function buyZeropoint{}

function sellZeropoint{}

function consumeZeropoint {}

function transferZeropoint{}
function transferUSD{}

function connectDevice{}

function get msg.sender[balances]{}

function transactionLog {}


}

